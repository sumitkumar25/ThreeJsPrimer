{"version":3,"sources":["./node_modules/three-spritetext/dist/three-spritetext.module.js","./node_modules/three/examples/jsm/lines/LineMaterial.js","./node_modules/three/examples/jsm/lines/LineSegments2.js","./node_modules/three/examples/jsm/lines/LineSegmentsGeometry.js","./src/app/network-graph/components/group-layout/group-layout.component.html","./src/app/network-graph/components/group-layout/group-layout.component.ts","./src/app/network-graph/network-graph-routing.module.ts","./src/app/network-graph/network-graph.module.ts","./src/app/network-graph/services/network-graph-request.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAsE;;AAEtE;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2EAA2E;AAC3E;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wCAAwC,SAAS;;AAEjD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,kDAAY;AAC5B,UAAU,4CAAM;AAChB,kBAAkB,oDAAc;AAChC,WAAW,6CAAO;AAClB;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,6GAA6G;;AAE7G;AACA;AACA,OAAO,EAAE;;AAET,8FAA8F;;AAE9F;AACA;AACA,OAAO,EAAE;;AAET;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA,OAAO;AACP;AACA;AACA,yEAAyE;;AAEzE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8DAA8D;;AAE9D;AACA;AACA;AACA;;AAEA,+DAA+D;;AAE/D,sBAAsB;;AAEtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,EAAE;;AAET;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAEc,uEAAQ,EAAC;;;;;;;;;;;;;AChaxB;AAAA;AAAA;AAMwC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kEAAW;;AAEX,aAAa,WAAW;AACxB,cAAc,YAAY,8DAAO,UAAU;AAC3C,aAAa,WAAW;AACxB,YAAY,WAAW;AACvB,WAAW,WAAW;AACtB,WAAW;;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","file":"network-graph-network-graph-module-ngfactory-es5.js","sourcesContent":["import { LinearFilter, Sprite, SpriteMaterial, Texture } from 'three';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar three = window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  LinearFilter: LinearFilter,\n  Sprite: Sprite,\n  SpriteMaterial: SpriteMaterial,\n  Texture: Texture\n};\n\nvar _default = /*#__PURE__*/function (_three$Sprite) {\n  _inherits(_default, _three$Sprite);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    var _this;\n\n    var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var textHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n    var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'rgba(255, 255, 255, 1)';\n\n    _classCallCheck(this, _default);\n\n    _this = _super.call(this, new three.SpriteMaterial({\n      map: new three.Texture()\n    }));\n    _this._text = \"\".concat(text);\n    _this._textHeight = textHeight;\n    _this._color = color;\n    _this._backgroundColor = false; // no background color\n\n    _this._padding = 0;\n    _this._borderWidth = 0;\n    _this._borderColor = 'white';\n    _this._strokeWidth = 0;\n    _this._strokeColor = 'white';\n    _this._fontFace = 'Arial';\n    _this._fontSize = 90; // defines text resolution\n\n    _this._fontWeight = 'normal';\n    _this._canvas = document.createElement('canvas');\n    _this._texture = _this.material.map;\n    _this._texture.minFilter = three.LinearFilter;\n\n    _this._genCanvas();\n\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"_genCanvas\",\n    value: function _genCanvas() {\n      var _this2 = this;\n\n      var canvas = this._canvas;\n      var ctx = canvas.getContext('2d');\n      var border = Array.isArray(this.borderWidth) ? this.borderWidth : [this.borderWidth, this.borderWidth]; // x,y border\n\n      var relBorder = border.map(function (b) {\n        return b * _this2.fontSize * 0.1;\n      }); // border in canvas units\n\n      var padding = Array.isArray(this.padding) ? this.padding : [this.padding, this.padding]; // x,y padding\n\n      var relPadding = padding.map(function (p) {\n        return p * _this2.fontSize * 0.1;\n      }); // padding in canvas units\n\n      var lines = this.text.split('\\n');\n      var font = \"\".concat(this.fontWeight, \" \").concat(this.fontSize, \"px \").concat(this.fontFace);\n      ctx.font = font; // measure canvas with appropriate font\n\n      var innerWidth = Math.max.apply(Math, _toConsumableArray(lines.map(function (line) {\n        return ctx.measureText(line).width;\n      })));\n      var innerHeight = this.fontSize * lines.length;\n      canvas.width = innerWidth + relBorder[0] * 2 + relPadding[0] * 2;\n      canvas.height = innerHeight + relBorder[1] * 2 + relPadding[1] * 2; // paint border\n\n      if (this.borderWidth) {\n        ctx.strokeStyle = this.borderColor;\n\n        if (relBorder[0]) {\n          ctx.lineWidth = relBorder[0] * 2;\n          ctx.beginPath();\n          ctx.moveTo(0, 0);\n          ctx.lineTo(0, canvas.height);\n          ctx.moveTo(canvas.width, 0);\n          ctx.lineTo(canvas.width, canvas.height);\n          ctx.stroke();\n        }\n\n        if (relBorder[1]) {\n          ctx.lineWidth = relBorder[1] * 2;\n          ctx.beginPath();\n          ctx.moveTo(relBorder[0], 0);\n          ctx.lineTo(canvas.width - relBorder[0], 0);\n          ctx.moveTo(relBorder[0], canvas.height);\n          ctx.lineTo(canvas.width - relBorder[0], canvas.height);\n          ctx.stroke();\n        }\n      }\n\n      ctx.translate.apply(ctx, _toConsumableArray(relBorder)); // paint background\n\n      if (this.backgroundColor) {\n        ctx.fillStyle = this.backgroundColor;\n        ctx.fillRect(0, 0, canvas.width - relBorder[0] * 2, canvas.height - relBorder[1] * 2);\n      }\n\n      ctx.translate.apply(ctx, _toConsumableArray(relPadding)); // paint text\n\n      ctx.font = font; // Set font again after canvas is resized, as context properties are reset\n\n      ctx.fillStyle = this.color;\n      ctx.textBaseline = 'bottom';\n      var drawTextStroke = this.strokeWidth > 0;\n\n      if (drawTextStroke) {\n        ctx.lineWidth = this.strokeWidth * this.fontSize / 10;\n        ctx.strokeStyle = this.strokeColor;\n      }\n\n      lines.forEach(function (line, index) {\n        var lineX = (innerWidth - ctx.measureText(line).width) / 2;\n        var lineY = (index + 1) * _this2.fontSize;\n        drawTextStroke && ctx.strokeText(line, lineX, lineY);\n        ctx.fillText(line, lineX, lineY);\n      }); // Inject canvas into sprite\n\n      this._texture.image = canvas;\n      this._texture.needsUpdate = true;\n      var yScale = this.textHeight * lines.length + border[1] * 2 + padding[1] * 2;\n      this.scale.set(yScale * canvas.width / canvas.height, yScale, 0);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor(this.text, this.textHeight, this.color).copy(this);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      three.Sprite.prototype.copy.call(this, source);\n      this.color = source.color;\n      this.backgroundColor = source.backgroundColor;\n      this.padding = source.padding;\n      this.borderWidth = source.borderWidth;\n      this.borderColor = source.borderColor;\n      this.fontFace = source.fontFace;\n      this.fontSize = source.fontSize;\n      this.fontWeight = source.fontWeight;\n      this.strokeWidth = source.strokeWidth;\n      this.strokeColor = source.strokeColor;\n      return this;\n    }\n  }, {\n    key: \"text\",\n    get: function get() {\n      return this._text;\n    },\n    set: function set(text) {\n      this._text = text;\n\n      this._genCanvas();\n    }\n  }, {\n    key: \"textHeight\",\n    get: function get() {\n      return this._textHeight;\n    },\n    set: function set(textHeight) {\n      this._textHeight = textHeight;\n\n      this._genCanvas();\n    }\n  }, {\n    key: \"color\",\n    get: function get() {\n      return this._color;\n    },\n    set: function set(color) {\n      this._color = color;\n\n      this._genCanvas();\n    }\n  }, {\n    key: \"backgroundColor\",\n    get: function get() {\n      return this._backgroundColor;\n    },\n    set: function set(color) {\n      this._backgroundColor = color;\n\n      this._genCanvas();\n    }\n  }, {\n    key: \"padding\",\n    get: function get() {\n      return this._padding;\n    },\n    set: function set(padding) {\n      this._padding = padding;\n\n      this._genCanvas();\n    }\n  }, {\n    key: \"borderWidth\",\n    get: function get() {\n      return this._borderWidth;\n    },\n    set: function set(borderWidth) {\n      this._borderWidth = borderWidth;\n\n      this._genCanvas();\n    }\n  }, {\n    key: \"borderColor\",\n    get: function get() {\n      return this._borderColor;\n    },\n    set: function set(borderColor) {\n      this._borderColor = borderColor;\n\n      this._genCanvas();\n    }\n  }, {\n    key: \"fontFace\",\n    get: function get() {\n      return this._fontFace;\n    },\n    set: function set(fontFace) {\n      this._fontFace = fontFace;\n\n      this._genCanvas();\n    }\n  }, {\n    key: \"fontSize\",\n    get: function get() {\n      return this._fontSize;\n    },\n    set: function set(fontSize) {\n      this._fontSize = fontSize;\n\n      this._genCanvas();\n    }\n  }, {\n    key: \"fontWeight\",\n    get: function get() {\n      return this._fontWeight;\n    },\n    set: function set(fontWeight) {\n      this._fontWeight = fontWeight;\n\n      this._genCanvas();\n    }\n  }, {\n    key: \"strokeWidth\",\n    get: function get() {\n      return this._strokeWidth;\n    },\n    set: function set(strokeWidth) {\n      this._strokeWidth = strokeWidth;\n\n      this._genCanvas();\n    }\n  }, {\n    key: \"strokeColor\",\n    get: function get() {\n      return this._strokeColor;\n    },\n    set: function set(strokeColor) {\n      this._strokeColor = strokeColor;\n\n      this._genCanvas();\n    }\n  }]);\n\n  return _default;\n}(three.Sprite);\n\nexport default _default;\n","import {\n\tShaderLib,\n\tShaderMaterial,\n\tUniformsLib,\n\tUniformsUtils,\n\tVector2\n} from \"../../../build/three.module.js\";\n\n/**\n * parameters = {\n *  color: <hex>,\n *  linewidth: <float>,\n *  dashed: <boolean>,\n *  dashScale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>,\n *  resolution: <Vector2>, // to be set by renderer\n * }\n */\n\nUniformsLib.line = {\n\n\tlinewidth: { value: 1 },\n\tresolution: { value: new Vector2( 1, 1 ) },\n\tdashScale: { value: 1 },\n\tdashSize: { value: 1 },\n\tgapSize: { value: 1 }, // todo FIX - maybe change to totalSize\n\topacity: { value: 1 }\n\n};\n\nShaderLib[ 'line' ] = {\n\n\tuniforms: UniformsUtils.merge( [\n\t\tUniformsLib.common,\n\t\tUniformsLib.fog,\n\t\tUniformsLib.line\n\t] ),\n\n\tvertexShader:\n\t\t`\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\tvarying vec2 vUv;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\tvUv = uv;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec2 ndcStart = clipStart.xy / clipStart.w;\n\t\t\tvec2 ndcEnd = clipEnd.xy / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd - ndcStart;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t// perpendicular to dir\n\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\n\t\t\t// undo aspect ratio adjustment\n\t\t\tdir.x /= aspect;\n\t\t\toffset.x /= aspect;\n\n\t\t\t// sign flip\n\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t// endcaps\n\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\toffset += - dir;\n\n\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\toffset += dir;\n\n\t\t\t}\n\n\t\t\t// adjust for linewidth\n\t\t\toffset *= linewidth;\n\n\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\toffset /= resolution.y;\n\n\t\t\t// select end\n\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t// back to clip space\n\t\t\toffset *= clip.w;\n\n\t\t\tclip.xy += offset;\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t`,\n\n\tfragmentShader:\n\t\t`\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashSize;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\tfloat a = vUv.x;\n\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t}\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, diffuseColor.a );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <encodings_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t}\n\t\t`\n};\n\nvar LineMaterial = function ( parameters ) {\n\n\tShaderMaterial.call( this, {\n\n\t\ttype: 'LineMaterial',\n\n\t\tuniforms: UniformsUtils.clone( ShaderLib[ 'line' ].uniforms ),\n\n\t\tvertexShader: ShaderLib[ 'line' ].vertexShader,\n\t\tfragmentShader: ShaderLib[ 'line' ].fragmentShader,\n\n\t\tclipping: true // required for clipping support\n\n\t} );\n\n\tthis.dashed = false;\n\n\tObject.defineProperties( this, {\n\n\t\tcolor: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.diffuse.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.diffuse.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tlinewidth: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.linewidth.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.linewidth.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdashScale: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.dashScale.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.dashScale.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdashSize: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.dashSize.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.dashSize.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgapSize: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.gapSize.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.gapSize.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\topacity: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.opacity.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.opacity.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tresolution: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.resolution.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.resolution.value.copy( value );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tthis.setValues( parameters );\n\n};\n\nLineMaterial.prototype = Object.create( ShaderMaterial.prototype );\nLineMaterial.prototype.constructor = LineMaterial;\n\nLineMaterial.prototype.isLineMaterial = true;\n\nexport { LineMaterial };\n","import {\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tLine3,\n\tMathUtils,\n\tMatrix4,\n\tMesh,\n\tVector3,\n\tVector4\n} from \"../../../build/three.module.js\";\nimport { LineSegmentsGeometry } from \"../lines/LineSegmentsGeometry.js\";\nimport { LineMaterial } from \"../lines/LineMaterial.js\";\n\nvar LineSegments2 = function ( geometry, material ) {\n\n\tif ( geometry === undefined ) geometry = new LineSegmentsGeometry();\n\tif ( material === undefined ) material = new LineMaterial( { color: Math.random() * 0xffffff } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'LineSegments2';\n\n};\n\nLineSegments2.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: LineSegments2,\n\n\tisLineSegments2: true,\n\n\tcomputeLineDistances: ( function () { // for backwards-compatability, but could be a method of LineSegmentsGeometry...\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tvar instanceStart = geometry.attributes.instanceStart;\n\t\t\tvar instanceEnd = geometry.attributes.instanceEnd;\n\t\t\tvar lineDistances = new Float32Array( 2 * instanceStart.data.count );\n\n\t\t\tfor ( var i = 0, j = 0, l = instanceStart.data.count; i < l; i ++, j += 2 ) {\n\n\t\t\t\tstart.fromBufferAttribute( instanceStart, i );\n\t\t\t\tend.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\tlineDistances[ j ] = ( j === 0 ) ? 0 : lineDistances[ j - 1 ];\n\t\t\t\tlineDistances[ j + 1 ] = lineDistances[ j ] + start.distanceTo( end );\n\n\t\t\t}\n\n\t\t\tvar instanceDistanceBuffer = new InstancedInterleavedBuffer( lineDistances, 2, 1 ); // d0, d1\n\n\t\t\tgeometry.setAttribute( 'instanceDistanceStart', new InterleavedBufferAttribute( instanceDistanceBuffer, 1, 0 ) ); // d0\n\t\t\tgeometry.setAttribute( 'instanceDistanceEnd', new InterleavedBufferAttribute( instanceDistanceBuffer, 1, 1 ) ); // d1\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar start = new Vector4();\n\t\tvar end = new Vector4();\n\n\t\tvar ssOrigin = new Vector4();\n\t\tvar ssOrigin3 = new Vector3();\n\t\tvar mvMatrix = new Matrix4();\n\t\tvar line = new Line3();\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tif ( raycaster.camera === null ) {\n\n\t\t\t\tconsole.error( 'LineSegments2: \"Raycaster.camera\" needs to be set in order to raycast against LineSegments2.' );\n\n\t\t\t}\n\n\t\t\tvar threshold = ( raycaster.params.Line2 !== undefined ) ? raycaster.params.Line2.threshold || 0 : 0;\n\n\t\t\tvar ray = raycaster.ray;\n\t\t\tvar camera = raycaster.camera;\n\t\t\tvar projectionMatrix = camera.projectionMatrix;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar resolution = material.resolution;\n\t\t\tvar lineWidth = material.linewidth + threshold;\n\n\t\t\tvar instanceStart = geometry.attributes.instanceStart;\n\t\t\tvar instanceEnd = geometry.attributes.instanceEnd;\n\n\t\t\t// pick a point 1 unit out along the ray to avoid the ray origin\n\t\t\t// sitting at the camera origin which will cause \"w\" to be 0 when\n\t\t\t// applying the projection matrix.\n\t\t\tray.at( 1, ssOrigin );\n\n\t\t\t// ndc space [ - 1.0, 1.0 ]\n\t\t\tssOrigin.w = 1;\n\t\t\tssOrigin.applyMatrix4( camera.matrixWorldInverse );\n\t\t\tssOrigin.applyMatrix4( projectionMatrix );\n\t\t\tssOrigin.multiplyScalar( 1 / ssOrigin.w );\n\n\t\t\t// screen space\n\t\t\tssOrigin.x *= resolution.x / 2;\n\t\t\tssOrigin.y *= resolution.y / 2;\n\t\t\tssOrigin.z = 0;\n\n\t\t\tssOrigin3.copy( ssOrigin );\n\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tmvMatrix.multiplyMatrices( camera.matrixWorldInverse, matrixWorld );\n\n\t\t\tfor ( var i = 0, l = instanceStart.count; i < l; i ++ ) {\n\n\t\t\t\tstart.fromBufferAttribute( instanceStart, i );\n\t\t\t\tend.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\tstart.w = 1;\n\t\t\t\tend.w = 1;\n\n\t\t\t\t// camera space\n\t\t\t\tstart.applyMatrix4( mvMatrix );\n\t\t\t\tend.applyMatrix4( mvMatrix );\n\n\t\t\t\t// clip space\n\t\t\t\tstart.applyMatrix4( projectionMatrix );\n\t\t\t\tend.applyMatrix4( projectionMatrix );\n\n\t\t\t\t// ndc space [ - 1.0, 1.0 ]\n\t\t\t\tstart.multiplyScalar( 1 / start.w );\n\t\t\t\tend.multiplyScalar( 1 / end.w );\n\n\t\t\t\t// skip the segment if it's outside the camera near and far planes\n\t\t\t\tvar isBehindCameraNear = start.z < - 1 && end.z < - 1;\n\t\t\t\tvar isPastCameraFar = start.z > 1 && end.z > 1;\n\t\t\t\tif ( isBehindCameraNear || isPastCameraFar ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// screen space\n\t\t\t\tstart.x *= resolution.x / 2;\n\t\t\t\tstart.y *= resolution.y / 2;\n\n\t\t\t\tend.x *= resolution.x / 2;\n\t\t\t\tend.y *= resolution.y / 2;\n\n\t\t\t\t// create 2d segment\n\t\t\t\tline.start.copy( start );\n\t\t\t\tline.start.z = 0;\n\n\t\t\t\tline.end.copy( end );\n\t\t\t\tline.end.z = 0;\n\n\t\t\t\t// get closest point on ray to segment\n\t\t\t\tvar param = line.closestPointToPointParameter( ssOrigin3, true );\n\t\t\t\tline.at( param, closestPoint );\n\n\t\t\t\t// check if the intersection point is within clip space\n\t\t\t\tvar zPos = MathUtils.lerp( start.z, end.z, param );\n\t\t\t\tvar isInClipSpace = zPos >= - 1 && zPos <= 1;\n\n\t\t\t\tvar isInside = ssOrigin3.distanceTo( closestPoint ) < lineWidth * 0.5;\n\n\t\t\t\tif ( isInClipSpace && isInside ) {\n\n\t\t\t\t\tline.start.fromBufferAttribute( instanceStart, i );\n\t\t\t\t\tline.end.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\t\tline.start.applyMatrix4( matrixWorld );\n\t\t\t\t\tline.end.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar pointOnLine = new Vector3();\n\t\t\t\t\tvar point = new Vector3();\n\n\t\t\t\t\tray.distanceSqToSegment( line.start, line.end, point, pointOnLine );\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tpoint: point,\n\t\t\t\t\t\tpointOnLine: pointOnLine,\n\t\t\t\t\t\tdistance: ray.origin.distanceTo( point ),\n\n\t\t\t\t\t\tobject: this,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: i,\n\t\t\t\t\t\tuv: null,\n\t\t\t\t\t\tuv2: null,\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() )\n\n} );\n\nexport { LineSegments2 };\n","import {\n\tBox3,\n\tFloat32BufferAttribute,\n\tInstancedBufferGeometry,\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tSphere,\n\tVector3,\n\tWireframeGeometry\n} from \"../../../build/three.module.js\";\n\nvar LineSegmentsGeometry = function () {\n\n\tInstancedBufferGeometry.call( this );\n\n\tthis.type = 'LineSegmentsGeometry';\n\n\tvar positions = [ - 1, 2, 0, 1, 2, 0, - 1, 1, 0, 1, 1, 0, - 1, 0, 0, 1, 0, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\tvar uvs = [ - 1, 2, 1, 2, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 2, 1, - 2 ];\n\tvar index = [ 0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5 ];\n\n\tthis.setIndex( index );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n};\n\nLineSegmentsGeometry.prototype = Object.assign( Object.create( InstancedBufferGeometry.prototype ), {\n\n\tconstructor: LineSegmentsGeometry,\n\n\tisLineSegmentsGeometry: true,\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tvar start = this.attributes.instanceStart;\n\t\tvar end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined ) {\n\n\t\t\tstart.applyMatrix4( matrix );\n\n\t\t\tend.applyMatrix4( matrix );\n\n\t\t\tstart.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetPositions: function ( array ) {\n\n\t\tvar lineSegments;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tlineSegments = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tlineSegments = new Float32Array( array );\n\n\t\t}\n\n\t\tvar instanceBuffer = new InstancedInterleavedBuffer( lineSegments, 6, 1 ); // xyz, xyz\n\n\t\tthis.setAttribute( 'instanceStart', new InterleavedBufferAttribute( instanceBuffer, 3, 0 ) ); // xyz\n\t\tthis.setAttribute( 'instanceEnd', new InterleavedBufferAttribute( instanceBuffer, 3, 3 ) ); // xyz\n\n\t\t//\n\n\t\tthis.computeBoundingBox();\n\t\tthis.computeBoundingSphere();\n\n\t\treturn this;\n\n\t},\n\n\tsetColors: function ( array ) {\n\n\t\tvar colors;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tcolors = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tcolors = new Float32Array( array );\n\n\t\t}\n\n\t\tvar instanceColorBuffer = new InstancedInterleavedBuffer( colors, 6, 1 ); // rgb, rgb\n\n\t\tthis.setAttribute( 'instanceColorStart', new InterleavedBufferAttribute( instanceColorBuffer, 3, 0 ) ); // rgb\n\t\tthis.setAttribute( 'instanceColorEnd', new InterleavedBufferAttribute( instanceColorBuffer, 3, 3 ) ); // rgb\n\n\t\treturn this;\n\n\t},\n\n\tfromWireframeGeometry: function ( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t},\n\n\tfromEdgesGeometry: function ( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t},\n\n\tfromMesh: function ( mesh ) {\n\n\t\tthis.fromWireframeGeometry( new WireframeGeometry( mesh.geometry ) );\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tfromLineSegments: function ( lineSegments ) {\n\n\t\tvar geometry = lineSegments.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tthis.setPositions( geometry.vertices );\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function computeBoundingBox() {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar start = this.attributes.instanceStart;\n\t\t\tvar end = this.attributes.instanceEnd;\n\n\t\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( start );\n\n\t\t\t\tbox.setFromBufferAttribute( end );\n\n\t\t\t\tthis.boundingBox.union( box );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tvar start = this.attributes.instanceStart;\n\t\t\tvar end = this.attributes.instanceEnd;\n\n\t\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tthis.boundingBox.getCenter( center );\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = start.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.fromBufferAttribute( start, i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\tvector.fromBufferAttribute( end, i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function () {\n\n\t\t// todo\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tconsole.warn( 'THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4().' );\n\n\t\treturn this.applyMatrix4( matrix );\n\n\t}\n\n} );\n\nexport { LineSegmentsGeometry };\n","<section #stats style=\"position: relative\">\n  <section class=\"metrices\">\n    <div>Render Calls: {{ renderCalls }}</div>\n    <div>\n      Node type\n      <label>\n        <input\n          type=\"radio\"\n          value=\"obj\"\n          name=\"nodeGeometryType\"\n          (change)=\"nodeGeometryChangeHandler($event)\"\n        />\n        Imported Model\n      </label>\n      <label>\n        <input\n          type=\"radio\"\n          value=\"buffer\"\n          name=\"nodeGeometryType\"\n          (change)=\"nodeGeometryChangeHandler($event)\"\n        />\n        Buffer geometry\n      </label>\n    </div>\n    <div>\n      <label for=\"points\"\n        >Node Count\n        <input\n          type=\"number\"\n          id=\"points\"\n          name=\"points\"\n          (change)=\"objectCountChangeHandler($event)\"\n          [value]=\"objectCount\"\n        />\n      </label>\n    </div>\n    <div>Connections: {{ connectionCount }}</div>\n    <div>\n      <label for=\"enable\">\n        <input\n          type=\"checkbox\"\n          name=\"enable\"\n          id=\"enable\"\n          [checked]=\"enableConnections\"\n          (change)=\"connectionStateHandler($event)\"\n        />\n        connections\n      </label>\n    </div>\n    <div class=\"text-metrices\">\n      <label>\n        <input\n          type=\"radio\"\n          value=\"html\"\n          name=\"labelType\"\n          (change)=\"labelsStateHandler($event)\"\n        />\n        All Html\n      </label>\n      <hr />\n      <label>\n        <input\n          type=\"radio\"\n          value=\"sprite\"\n          name=\"labelType\"\n          (change)=\"labelsStateHandler($event)\"\n        />\n        All npm SpriteText\n      </label>\n      <hr />\n      <label>\n        <input\n          type=\"radio\"\n          value=\"allMouseSpriteNative\"\n          name=\"labelType\"\n          (change)=\"labelsStateHandler($event)\"\n        />\n        All native Mouse Sprite\n      </label>\n      <hr />\n\n      <label>\n        <input\n          type=\"radio\"\n          value=\"mouseSprite\"\n          name=\"labelType\"\n          (change)=\"labelsStateHandler($event)\"\n        />\n        Event npm SpriteText\n      </label>\n      <hr />\n      <label>\n        <input\n          type=\"radio\"\n          value=\"mouseSpriteNative\"\n          name=\"labelType\"\n          (change)=\"labelsStateHandler($event)\"\n        />\n        Event native Mouse Sprite\n      </label>\n    </div>\n  </section>\n  <div style=\"position: relative; width: 1002px; height: 502px; margin: 0 auto\">\n    <canvas\n      height=\"500\"\n      width=\"1000\"\n      #canvasEl\n      (click)=\"clickHandler($event)\"\n    ></canvas>\n    <!-- (mouseover)=\"clickHandler($event)\" -->\n\n    <div id=\"labels\"></div>\n  </div>\n</section>\n","/**\n * TODO: check if other possibilities are there for loaded mesh. current 'Group'.\n * TODO: Groups Texture.\n */\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild,\n} from \"@angular/core\";\nimport { forkJoin } from \"rxjs\";\nimport { ThreeService } from \"src/app/three/services/three.service\";\nimport * as THREE from \"three\";\nimport SpriteText from \"three-spritetext\";\nimport { LineSegments2 } from \"three/examples/jsm/lines/LineSegments2\";\nimport { LineSegmentsGeometry } from \"three/examples/jsm/lines/LineSegmentsGeometry\";\nimport * as Stats from \"../../../../../node_modules/stats.js/build/stats.min.js\";\nimport { NetworkGraphRequestService } from \"../../services/network-graph-request.service.js\";\nimport { LineMaterial } from \"./../../../../../node_modules/three/examples/jsm/lines/LineMaterial.js\";\n@Component({\n  selector: \"app-group-layout\",\n  templateUrl: \"./group-layout.component.html\",\n  styleUrls: [\"./group-layout.component.scss\"],\n})\nexport class GroupLayoutComponent implements OnInit, AfterViewInit {\n  threeCommon: { scene: any; renderer: any; camera: any; controls: any };\n\n  @ViewChild(\"canvasEl\", { static: false, read: ElementRef })\n  canvasEl: ElementRef;\n  @ViewChild(\"stats\", { static: false, read: ElementRef }) statsEl: ElementRef;\n  stats: any;\n\n  // performance class memebers.\n  renderCalls: any;\n  objectCount: number = 3;\n  previousObjectCount = 0;\n  layoutMesh: THREE.Mesh<THREE.Geometry, THREE.MeshBasicMaterial>;\n  nodeMesh: THREE.InstancedMesh<any, THREE.MeshNormalMaterial | any> | any;\n  instancedNodeMesh: THREE.InstancedMesh<\n    THREE.InstancedBufferGeometry | THREE.BufferGeometry,\n    THREE.MeshBasicMaterial\n  >;\n\n  // Level 1 Response;\n  groupsData: Object;\n\n  // connections\n  connectionsData;\n\n  nodePositionCollection: any = [];\n  connectionStep: number = 1;\n  connectionCount: number | string = \"not specified\";\n  enableConnections = false;\n  noConnectionMesh = false;\n  mouse: any;\n  raycaster = new THREE.Raycaster();\n  line: LineSegments2;\n\n  traffic = {};\n\n  directionInstanceMesh;\n  trafficColor = 0x378ef0;\n  renderRequested: any;\n  loadObjModel: boolean;\n  nodeMeshBuffer: {\n    geometry: THREE.SphereBufferGeometry;\n    material: THREE.MeshBasicMaterial;\n  };\n  labelSpriteText: any;\n  labelsElements: any = {};\n\n  constructor(\n    private threeService: ThreeService,\n    private graphRequestService: NetworkGraphRequestService\n  ) {}\n\n  ngOnInit() {\n    this.initRequests();\n  }\n\n  ngAfterViewInit(): void {\n    this.threeCommon = this.threeService.getThreeCommon(\n      this.canvasEl.nativeElement,\n      true\n    );\n    this.setUpStats();\n    this.threeCommon.camera.position.z = 10;\n    // this.threeCommon.camera.aspect =\n    //   this.canvasEl.nativeElement.offsetWidth /\n    //   this.canvasEl.nativeElement.offsetHeight;\n    // this.threeCommon.renderer.setPixelRatio(2);\n    this.threeCommon.scene.background = new THREE.Color(0x000000);\n    this.threeCommon.camera.updateProjectionMatrix();\n    this.threeCommon.controls.addEventListener(\"change\", () => {\n      // this.configureRaycast();\n      // this.configureLabels();\n      this.requestRenderIfNotRequested();\n    });\n    window.addEventListener(\n      \"resize\",\n      this.requestRenderIfNotRequested.bind(this)\n    );\n  }\n\n  initRequests() {\n    forkJoin(\n      this.graphRequestService.getGroups(),\n      this.graphRequestService.getNodeMesh()\n    ).subscribe(([groupData, mesh]) => {\n      this.nodeMeshResponseHandler(mesh);\n      this.groupsResponseHandler(groupData);\n    });\n  }\n\n  nodeMeshResponseHandler(mesh) {\n    this.nodeMeshBuffer = {\n      geometry: new THREE.SphereBufferGeometry(1, 10, 10),\n      material: new THREE.MeshPhongMaterial({ color: 0xefefef }),\n    };\n    if (mesh.type && mesh.type === \"Group\") {\n      this.nodeMesh = mesh.children[0];\n    } else {\n      this.nodeMesh = mesh;\n    }\n  }\n\n  groupsResponseHandler(groupData: Object) {\n    this.sceneController();\n  }\n\n  constructNodes(forceNewMesh) {\n    let newMesh = forceNewMesh || !this.instancedNodeMesh;\n    if (newMesh) {\n      if (this.instancedNodeMesh) {\n        this.instancedNodeMesh.geometry.dispose();\n        this.instancedNodeMesh.material.dispose();\n        this.threeCommon.scene.remove(this.instancedNodeMesh);\n      }\n      const attrObj = this.loadObjModel ? this.nodeMesh : this.nodeMeshBuffer;\n      this.instancedNodeMesh = new THREE.InstancedMesh(\n        attrObj.geometry,\n        attrObj.material,\n        10000\n      );\n      this.instancedNodeMesh.userData = { __graphObj: \"nodeMesh\" };\n    } else {\n      this.instancedNodeMesh.instanceMatrix.needsUpdate = true;\n    }\n    for (let i = 0; i < this.objectCount; i++) {\n      this.instancedNodeMesh.setMatrixAt(i, this.setPositionFromLayout(i));\n    }\n    if (this.previousObjectCount > this.objectCount) {\n      for (let i = this.objectCount; i < this.previousObjectCount; i++) {\n        //using indexes as id.\n        let mat = new THREE.Matrix4();\n        this.instancedNodeMesh.setMatrixAt(i, mat);\n      }\n    }\n    this.threeCommon.scene.add(this.instancedNodeMesh);\n  }\n\n  setPositionFromTraffic(trafficLink: any): any {\n    const source = trafficLink.source.position;\n    const target = trafficLink.target.position;\n    const axis = new THREE.Vector3(0, 1, 0);\n    const matrix = new THREE.Matrix4();\n    const quaternion = new THREE.Quaternion();\n    const position = new THREE.Vector3(\n      (source.x + target.x) / 2,\n      (source.y + target.y) / 2,\n      (source.z + target.z) / 2\n    );\n    const scale = new THREE.Vector3(1, 1, 1);\n    quaternion.setFromUnitVectors(\n      axis,\n      target.clone().sub(source.clone()).normalize()\n    );\n    matrix.compose(position, quaternion, scale);\n    return matrix;\n  }\n\n  setPositionFromLayout(i: number): THREE.Matrix4 {\n    const matrix = new THREE.Matrix4();\n    var rotation = new THREE.Euler();\n    var quaternion = new THREE.Quaternion();\n    var position = new THREE.Vector3();\n    var offset = i * 5;\n    position.x = (offset * Math.sin(i)) / Math.sqrt(i + 1);\n    position.y = (offset * Math.cos(i)) / Math.sqrt(i + 1);\n    position.z = i / 10;\n    this.nodePositionCollection.push({ position, nodeIndex: i });\n    var scale = new THREE.Vector3();\n    quaternion.setFromEuler(rotation);\n    scale.x = scale.y = scale.z = 1;\n    matrix.compose(position, quaternion, scale);\n    return matrix;\n  }\n\n  private sceneController(newMesh?) {\n    this.constructNodes(!!newMesh);\n    if (this.enableConnections) {\n      this.configureLineSegmentConnections();\n      this.configureDirectionalArrows();\n    }\n    this.configureRaycast();\n    this.configureLabels();\n    this.requestRenderIfNotRequested();\n  }\n\n  configureDirectionalArrows() {\n    let newMesh = !this.directionInstanceMesh;\n    if (newMesh) {\n      const geometry = new THREE.ConeBufferGeometry(0.3, 0.8);\n      const material = new THREE.MeshBasicMaterial({\n        color: this.trafficColor,\n      });\n      this.directionInstanceMesh = new THREE.InstancedMesh(\n        geometry,\n        material,\n        10000\n      );\n    } else {\n      this.directionInstanceMesh.instanceMatrix.needsUpdate = true;\n    }\n    console.log(this.directionInstanceMesh.countx);\n    for (let index = 0; index < this.directionInstanceMesh.count; index++) {\n      this.directionInstanceMesh.setMatrixAt(index, new THREE.Matrix4());\n    }\n    Object.keys(this.traffic).forEach((key, index) => {\n      this.directionInstanceMesh.setMatrixAt(\n        index,\n        this.setPositionFromTraffic(this.traffic[key])\n      );\n    });\n    this.threeCommon.scene.add(this.directionInstanceMesh);\n\n    //     const geometry = new THREE.ConeGeometry(0.2, 0.6);\n    //  const material = new THREE.MeshPhongMaterial({\n    //   color: 0x2984cf,\n    //  emissive: 0x2984cf\n    //  });\n    //  const cone = new THREE.Mesh(geometry, material);\n    //  cone.position.y = target.distanceTo(source) / 2;\n    //  cone.scale.set(0.5, 0.5, 0.5);\n    //  target.sub(source).normalize();\n    //  this.arrowHelper = new THREE.ArrowHelper(target, source, 0);\n    //  this.arrowHelper.cone.copy(cone);\n    //  this.threeCommon.scene.add(this.arrowHelper);\n  }\n\n  configureLineSegmentConnections() {\n    this.connectionCount = 0;\n    this.traffic = {};\n    const lineGeometry = new LineSegmentsGeometry();\n    const positions = [];\n    const colors = [];\n    const matLine = new LineMaterial({\n      color: this.trafficColor,\n      vertexColors: true,\n      dashed: false,\n      linewidth: 3,\n    });\n    matLine.resolution.set(\n      this.canvasEl.nativeElement.offsetWidth,\n      this.canvasEl.nativeElement.offsetHeight\n    );\n    const colorRGB = new THREE.Color(this.trafficColor).convertLinearToSRGB();\n\n    for (\n      let index = 0;\n      index < this.nodePositionCollection.length - 1;\n      index++\n    ) {\n      const source = this.nodePositionCollection[index];\n      const target = this.nodePositionCollection[index + 1];\n      this.traffic[index] = { source, target };\n      positions.push(\n        source.position.x,\n        source.position.y,\n        source.position.z,\n        target.position.x,\n        target.position.y,\n        target.position.z\n      );\n      colors.push(\n        colorRGB.r,\n        colorRGB.g,\n        colorRGB.b,\n        colorRGB.r,\n        colorRGB.g,\n        colorRGB.b\n      );\n      this.connectionCount++;\n    }\n    lineGeometry.setPositions(new Float32Array(positions));\n    lineGeometry.setColors(colors);\n    this.line = new LineSegments2(lineGeometry, matLine);\n    this.line.userData = { __graphObj: \"connection\" };\n    this.threeCommon.scene.add(this.line);\n  }\n\n  private lineClickHandler(raycastObj) {\n    const _connection = this.traffic[raycastObj.faceIndex];\n    console.log(\"faceIndex\", raycastObj.faceIndex, _connection);\n  }\n\n  setUpStats() {\n    this.stats = new Stats();\n    this.stats.showPanel(1); // 0: fps, 1: ms, 2: mb, 3+: custom\n    this.statsEl.nativeElement.appendChild(this.stats.dom);\n    this.updateStats();\n  }\n  updateStats() {\n    this.stats.update();\n    window.requestAnimationFrame(this.updateStats.bind(this));\n  }\n  // event handlers\n  /**\n   * \n   * @param event     \n   * this.mouse.x =\n      ((event.clientX - canvasBounds.left) /\n        (canvasBounds.right - canvasBounds.left))\n        \n      (x + 1)/2 *\n   */\n  clickHandler(event) {\n    event.preventDefault();\n    let canvasBounds = this.threeCommon.renderer.context.canvas.getBoundingClientRect();\n    this.mouse = this.mouse || new THREE.Vector3();\n    this.mouse.x =\n      ((event.clientX - canvasBounds.left) /\n        (canvasBounds.right - canvasBounds.left)) *\n        2 -\n      1;\n    this.mouse.y =\n      -(\n        (event.clientY - canvasBounds.top) /\n        (canvasBounds.bottom - canvasBounds.top)\n      ) *\n        2 +\n      1;\n    this.configureRaycast();\n    this.configureLabels();\n  }\n\n  objectCountChangeHandler($event) {\n    this.threeService.cleanScene(this.threeCommon);\n    this.nodePositionCollection = [];\n    this.previousObjectCount = this.objectCount;\n    this.objectCount = Number.parseInt($event.target.value, 10);\n    this.connectionStep = this.objectCount;\n    this.sceneController();\n  }\n\n  connectionStepHandler($event) {\n    this.threeService.cleanScene(this.threeCommon);\n    this.nodePositionCollection = [];\n    this.connectionStep = Number.parseInt($event.target.value, 10);\n    this.sceneController();\n  }\n\n  connectionStateHandler($event) {\n    this.threeService.cleanScene(this.threeCommon);\n    this.nodePositionCollection = [];\n    this.enableConnections = $event.target.checked;\n    this.sceneController();\n  }\n\n  meshTypeStateHandler($event) {\n    this.threeService.cleanScene(this.threeCommon);\n    this.nodePositionCollection = [];\n    this.noConnectionMesh = $event.target.checked;\n    this.sceneController();\n  }\n\n  nodeGeometryChangeHandler($event) {\n    this.threeService.cleanScene(this.threeCommon);\n    this.loadObjModel = $event.target.value === \"obj\";\n    this.sceneController(true);\n  }\n\n  labelsStateHandler($event) {\n    this.threeService.cleanScene(this.threeCommon);\n    this.labelSpriteText = $event.target.value;\n    this.sceneController();\n  }\n\n  renderView() {\n    this.renderRequested = false;\n    if (this.resizeRendererToDisplaySize(this.threeCommon.renderer)) {\n      const canvas = this.threeCommon.renderer.domElement;\n      this.threeCommon.camera.aspect = canvas.clientWidth / canvas.clientHeight;\n      this.threeCommon.camera.updateProjectionMatrix();\n    }\n    this.threeCommon.scene.traverse((object) => {\n      if (object.type === \"Sprite\") {\n        if (this.threeCommon.camera.position.distanceTo(object.position) < 15) {\n          object.visible = true;\n        } else {\n          object.visible = false;\n        }\n      }\n    });\n    this.threeCommon.renderer.render(\n      this.threeCommon.scene,\n      this.threeCommon.camera\n    );\n    this.renderCalls = this.threeService.getRendererCallCount(\n      this.threeCommon.renderer\n    );\n  }\n\n  private configureLabels() {\n    if (this.labelSpriteText === \"html\") {\n      this.htmlOverlayAllLabels();\n    } else if (this.labelSpriteText === \"sprite\") {\n      this.npmSpriteAllLabels();\n    } else if (this.labelSpriteText === \"allMouseSpriteNative\") {\n      this.nativeSpriteAllLabels();\n    }\n  }\n\n  private configureEventBasedLabels(intersects) {\n    if (this.labelSpriteText === \"mouseSprite\") {\n      this.npmSpriteOnEvent(intersects);\n    } else if (this.labelSpriteText === \"mouseSpriteNative\") {\n      this.nativeSpriteOnEvent(intersects);\n    }\n  }\n\n  resizeRendererToDisplaySize(renderer) {\n    const canvas = renderer.domElement;\n    const width = canvas.clientWidth;\n    const height = canvas.clientHeight;\n    const needResize = canvas.width !== width || canvas.height !== height;\n    if (needResize) {\n      renderer.setSize(width, height, false);\n    }\n    return needResize;\n  }\n\n  requestRenderIfNotRequested() {\n    if (!this.renderRequested) {\n      this.renderRequested = true;\n      window.requestAnimationFrame(this.renderView.bind(this));\n    }\n  }\n  private configureRaycast() {\n    // if (this.mouse) {\n    //   this.raycaster.setFromCamera(this.mouse, this.threeCommon.camera);\n    //   // const intersects = this.raycaster.intersectObjects(\n    //   //   this.threeCommon.scene.children\n    //   // );\n    //   // console.log(intersects);\n    //   const lineRaycast = this.raycaster.intersectObjects([this.line]);\n    //   if (\n    //     lineRaycast &&\n    //     lineRaycast[0] &&\n    //     lineRaycast[0].object &&\n    //     lineRaycast[0].object.userData &&\n    //     lineRaycast[0].object.userData.__graphObj === \"connection\"\n    //   ) {\n    //     this.lineClickHandler(lineRaycast[0]);\n    //   }\n    // }\n\n    if (this.mouse) {\n      this.raycaster.setFromCamera(this.mouse, this.threeCommon.camera);\n\n      // label\n      var intersects = this.raycaster.intersectObjects(\n        this.threeCommon.scene.children\n      );\n      if (\n        intersects &&\n        intersects[0] &&\n        intersects[0].object &&\n        intersects[0].object.userData.__graphObj === \"nodeMesh\"\n      ) {\n        this.configureEventBasedLabels(intersects);\n      }\n    }\n  }\n  /**\n   * NPM sprite text. On mouse click\n   */\n  private npmSpriteOnEvent(intersects: THREE.Intersection[]) {\n    const sprite = new SpriteText(\"node label\" + intersects[0].instanceId);\n    sprite.color = \"#ffffff\";\n    sprite.textHeight = 0.7;\n    sprite.visible = true;\n    const position = this.getLabelPosition(intersects, null);\n    sprite.position.set(position.x, position.y - 2, position.z);\n    this.threeCommon.scene.add(sprite);\n  }\n  /**\n   * NPM sprite text. all labels\n   */\n  npmSpriteAllLabels() {\n    const spriteGrp = new THREE.Object3D();\n    for (let index = 0; index < this.objectCount; index++) {\n      let matrix = new THREE.Matrix4();\n      this.instancedNodeMesh.getMatrixAt(index, matrix);\n      const position = new THREE.Vector3();\n      position.setFromMatrixPosition(matrix);\n      // console.log(cameraPosition.distanceTo(position), `node index ${index}`);\n      const sprite = new SpriteText(`node index ${index}`);\n      if (index === 0) console.log(sprite);\n      sprite.color = \"#b3b3b3\";\n      sprite.textHeight = 0.5;\n      sprite.visible = true;\n      sprite.position.set(position.x, position.y + 1.5, position.z);\n      spriteGrp.add(sprite);\n    }\n    this.threeCommon.scene.add(spriteGrp);\n  }\n  /**\n   * Native canvas sprite text. On mouse click\n   */\n  private nativeSpriteOnEvent(intersects: any) {\n    const sprite = this.createNativeSpriteLabel(\n      \"node label\" + intersects[0].instanceId\n    );\n    const position = this.getLabelPosition(intersects, null);\n    sprite.position.set(position.x, position.y - 2, position.z);\n    this.threeCommon.scene.add(sprite);\n  }\n\n  /**\n   * Native canvas sprite text. all labels\n   */\n  nativeSpriteAllLabels() {\n    for (let index = 0; index < this.objectCount; index++) {\n      const position = this.getLabelPosition(null, index);\n      const sprite = this.createNativeSpriteLabel(`node index ${index}`);\n      sprite.position.setX(position.x);\n      sprite.position.setY(position.y - 2);\n      this.threeCommon.scene.add(sprite);\n    }\n  }\n  /**\n   * HTML overlay. all labels\n   */\n  htmlOverlayAllLabels() {\n    const labelParentElem = document.querySelector(\"#labels\");\n    labelParentElem.innerHTML = \"\";\n    const docFrag = document.createDocumentFragment();\n    let canvasBounds = this.threeCommon.renderer.context.canvas.getBoundingClientRect();\n    const frustum = new THREE.Frustum();\n\n    for (let index = 0; index < this.objectCount; index++) {\n      const elem = document.createElement(\"div\");\n      elem.className = \"label-div\";\n      elem.textContent = \"node name \" + index;\n      elem.setAttribute(\"data-matrix-id\", index + \"\");\n      let matrix = new THREE.Matrix4();\n      this.instancedNodeMesh.getMatrixAt(index, matrix);\n      const position = new THREE.Vector3();\n      position.setFromMatrixPosition(matrix);\n      this.threeCommon.camera.updateMatrix();\n      this.threeCommon.camera.updateMatrixWorld();\n\n      frustum.setFromProjectionMatrix(\n        new THREE.Matrix4().multiplyMatrices(\n          this.threeCommon.camera.projectionMatrix,\n          this.threeCommon.camera.matrixWorldInverse\n        )\n      );\n\n      // if (\n      //   frustum.containsPoint(position) &&\n      //   this.threeCommon.camera.position.distanceTo(position) < 25\n      // ) {\n      position.setY(position.y - 1);\n      position.project(this.threeCommon.camera);\n      // convert to unit  vector.\n      position.normalize();\n      if (Number.isNaN(position.x)) {\n        position.x = 0;\n      }\n      if (Number.isNaN(position.y)) {\n        position.y = 0;\n      }\n      const x = ((position.x + 1) * canvasBounds.width) / 2;\n      const y = ((1 - position.y) * canvasBounds.height) / 2;\n      elem.style.left = `${0}px`;\n      elem.style.top = `${0}px`;\n      elem.style.position = `absolute`;\n      elem.style.zIndex = (((-position.z * 0.5 + 0.5) * 100000) | 0) + \"\";\n      elem.style.minWidth = \"100px\";\n      elem.style.transform = `translate(${x}px,${y}px)`;\n      docFrag.appendChild(elem);\n    }\n    labelParentElem.append(docFrag);\n  }\n\n  createNativeSpriteLabel(text): any {\n    var font = \"Arial\";\n    var size = 130;\n    var color = \"#ffffff\";\n    var font = \"bold \" + size + \"px \" + font;\n\n    var canvas = document.createElement(\"canvas\");\n    var context = canvas.getContext(\"2d\");\n    context.font = font;\n    var metrics = context.measureText(text),\n      textWidth = metrics.width;\n\n    canvas.width = textWidth + 3;\n    canvas.height = size + 3;\n\n    context.font = font;\n    context.fillStyle = color;\n    context.fillText(text, 0, size + 3);\n    var texture = new THREE.Texture(canvas);\n    texture.needsUpdate = true;\n\n    var spriteMaterial = new THREE.SpriteMaterial({ map: texture });\n\n    let sprite1 = new THREE.Sprite(spriteMaterial);\n    sprite1.scale.set(4, 1, 1.0);\n    return sprite1;\n  }\n\n  private getLabelPosition(intersects: THREE.Intersection[], index) {\n    const _index = intersects[0].instanceId || index;\n    let matrix = new THREE.Matrix4();\n    this.instancedNodeMesh.getMatrixAt(_index, matrix);\n    const position = new THREE.Vector3();\n    position.setFromMatrixPosition(matrix);\n    return position;\n  }\n}\n","import { Component, NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { NetworkGraphRoutes } from \"../common/enums/network-graph-routes.enum\";\nimport { GroupLayoutComponent } from \"./components/group-layout/group-layout.component\";\n\nconst routes: Routes = [\n  {\n    path: `${NetworkGraphRoutes.groupLayout}`,\n    component: GroupLayoutComponent,\n  },\n  {\n    path: ``,\n    component: GroupLayoutComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NetworkGraphRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NetworkGraphRoutingModule } from './network-graph-routing.module';\nimport { GroupLayoutComponent } from './components/group-layout/group-layout.component';\n\n\n@NgModule({\n  declarations: [GroupLayoutComponent],\n  imports: [\n    CommonModule,\n    NetworkGraphRoutingModule\n  ]\n})\nexport class NetworkGraphModule { }\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { from } from \"rxjs\";\nimport { OBJLoader } from \"./../../../../node_modules/three/examples/jsm/loaders/OBJLoader\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class NetworkGraphRequestService {\n  private GEOMETRY_URL = \"assets/network-graph/geometry/node.obj\";\n  private MOCK_GROUPS_URL = \"assets/network-graph/server/groups.json\";\n  private MOCK_CONNECTIONS_URL: string =\n    \"assets/network-graph/server/connections.json\";\n  constructor(private httpClient: HttpClient) {}\n\n  getNodeMesh() {\n    return from(new OBJLoader().loadAsync(this.GEOMETRY_URL));\n  }\n\n  getGroups() {\n    return this.httpClient.get(this.MOCK_GROUPS_URL);\n  }\n\n  getTrafficConnections() {\n    return this.httpClient.get(this.MOCK_CONNECTIONS_URL);\n  }\n}\n"],"sourceRoot":""}