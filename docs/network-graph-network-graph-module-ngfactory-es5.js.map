{"version":3,"sources":["./src/app/network-graph/components/group-layout/group-layout.component.html","./src/app/network-graph/components/group-layout/group-layout.component.ts","./src/app/network-graph/network-graph-routing.module.ts","./src/app/network-graph/network-graph.module.ts"],"names":[],"mappings":"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","file":"network-graph-network-graph-module-ngfactory-es5.js","sourcesContent":["<section #stats>\n    <h3>Group Layout</h3>\n    <h6>Render Calls:  </h6>\n    <div class=\"app--margin__vertical object-range\">\n        <input\n          type=\"range\"\n          id=\"points\"\n          name=\"points\"\n          min=\"3\"\n          max=\"100\"\n          step=\"1\"\n          (change)=\"objectCountChangeHandler($event)\"\n          [value]=\"objectCount\"\n        />\n      </div>\n    <canvas\n      height=\"500\"\n      width=\"1000\"\n      #canvasEl\n      (click)=\"clickHandler($event)\"\n    ></canvas>\n  </section>","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild,\n} from \"@angular/core\";\nimport { ThreeService } from \"src/app/three/services/three.service\";\nimport * as THREE from \"three\";\nimport * as Stats from \"../../../../../node_modules/stats.js/build/stats.min.js\";\nimport { OBJLoader } from \"./../../../../../node_modules/three/examples/jsm/loaders/OBJLoader\";\n\n@Component({\n  selector: \"app-group-layout\",\n  templateUrl: \"./group-layout.component.html\",\n  styleUrls: [\"./group-layout.component.scss\"],\n})\nexport class GroupLayoutComponent implements OnInit, AfterViewInit {\n  threeCommon: { scene: any; renderer: any; camera: any; controls: any };\n\n  @ViewChild(\"canvasEl\", { static: false, read: ElementRef })\n  canvasEl: ElementRef;\n  @ViewChild(\"stats\", { static: false, read: ElementRef }) statsEl: ElementRef;\n  stats: any;\n\n  // layout class members\n  layoutGeometry: THREE.CircleGeometry;\n  layoutMaterial: THREE.MeshBasicMaterial;\n\n  // performance class memebers.\n  renderCalls: any;\n  objectCount: number = 3;\n  layoutMesh: THREE.Mesh<THREE.CircleGeometry, THREE.MeshBasicMaterial>;\n    nodeGeometry: THREE.InstancedBufferGeometry | THREE.BufferGeometry;\n    nodeMesh: THREE.InstancedMesh<any, THREE.MeshNormalMaterial>;\n\n  constructor(private threeService: ThreeService) {}\n\n  ngAfterViewInit(): void {\n    this.threeCommon = this.threeService.getThreeCommon(\n      this.canvasEl.nativeElement\n    );\n    this.setUpStats();\n    this.setUpHelpers();\n    this.threeCommon.camera.position.z = 20;\n    this.threeCommon.camera.aspect =\n      this.canvasEl.nativeElement.offsetWidth /\n      this.canvasEl.nativeElement.offsetHeight;\n    this.threeCommon.renderer.setPixelRatio(window.devicePixelRatio);\n    // this.threeCommon.scene.background = 'black';\n    this.threeCommon.camera.updateProjectionMatrix();\n  }\n\n  setUpHelpers() {\n    this.threeCommon.scene.add(new THREE.AxesHelper(50));\n  }\n\n  constructNodes() {\n    const material = new THREE.MeshNormalMaterial();\n    const matrix = new THREE.Matrix4();\n    this.nodeMesh = new THREE.InstancedMesh(\n      this.nodeGeometry,\n      material,\n      this.objectCount\n    );\n    for (var i = 0; i < this.objectCount; i++) {\n      this.nodeMesh.setMatrixAt(i, this.setPositionFromLayout(i));\n    }\n    this.threeCommon.scene.add(this.nodeMesh);\n  }\n\n  setPositionFromLayout(i: number): THREE.Matrix4 {\n    const matrix = new THREE.Matrix4();\n    var position = new THREE.Vector3();\n    var rotation = new THREE.Euler();\n    var quaternion = new THREE.Quaternion();\n    var scale = new THREE.Vector3();\n    if (!this.layoutGeometry.vertices[i]) {\n      console.log(\"no vertex for index\", i+1);\n    }\n    position = this.layoutGeometry.vertices[i+1];\n    // rotation.x = Math.random() * 2 * Math.PI;\n    // rotation.y = Math.random() * 2 * Math.PI;\n    // rotation.z = Math.random() * 2 * Math.PI;\n\n    quaternion.setFromEuler(rotation);\n\n    scale.x = scale.y = scale.z = 1;\n\n    matrix.compose(position, quaternion, scale);\n    return matrix;\n  }\n\n  initLayout() {\n    this.threeService.cleanScene(this.threeCommon);\n    this.layoutGeometry = new THREE.CircleGeometry(\n      10,\n      this.objectCount,\n      0,\n      2 * Math.PI\n    );\n    this.layoutMaterial = new THREE.MeshBasicMaterial({\n      color: \"black\",\n      wireframe: true,\n    });\n    this.layoutMesh = new THREE.Mesh(this.layoutGeometry, this.layoutMaterial);\n    // this.layoutMesh.rotateX(-1);\n    // this.layoutMesh.upda\n    this.threeCommon.scene.add(this.layoutMesh);\n  }\n\n  setUpStats() {\n    this.stats = new Stats();\n    this.stats.showPanel(1); // 0: fps, 1: ms, 2: mb, 3+: custom\n    this.statsEl.nativeElement.appendChild(this.stats.dom);\n    this.stats.domElement.style.position = \"absolute\";\n    this.stats.domElement.style.left = \"0px\";\n    this.stats.domElement.style.top = \"0px\";\n  }\n\n  clickHandler($event) {\n\n  }\n  private renderView() {\n    // if (this.mouse) {\n    //   this.raycaster.setFromCamera(this.mouse, this.threeCommon.camera);\n    // }\n\n    // var intersection = this.raycaster.intersectObject(this.mesh);\n    // if (intersection.length > 0) {\n    //   var rotationMatrix = new THREE.Matrix4().makeRotationY(0.2);\n    //   var instanceMatrix = new THREE.Matrix4();\n    //   var instanceId = intersection[0].instanceId;\n    //   const matrix = new THREE.Matrix4();\n    //   this.mesh.getMatrixAt(intersection[0].instanceId, instanceMatrix);\n    //   matrix.multiplyMatrices(instanceMatrix, rotationMatrix);\n\n    //   this.mesh.setMatrixAt(intersection[0].instanceId, matrix);\n    //   this.mesh.instanceMatrix.needsUpdate = true;\n    // }\n    this.threeCommon.renderer.render(\n      this.threeCommon.scene,\n      this.threeCommon.camera\n    );\n    this.threeCommon.controls.update();\n    this.stats.update();\n    window.requestAnimationFrame(this.renderView.bind(this));\n    this.renderCalls = this.threeCommon.renderer.info.render.calls;\n  }\n\n  objectCountChangeHandler($event) {\n    this.objectCount = Number.parseInt($event.target.value, 10);\n    this.sceneController();\n  }\n\n    private sceneController() {\n        this.initLayout();\n        this.constructNodes();\n        this.renderView();\n    }\n\n  ngOnInit() {\n    this.loadGeometry();\n  }\n\n  loadGeometry() {\n    const loader = new THREE.BufferGeometryLoader();\n    loader.load(\"assets/custom/geometry2.json\", (geometry) => {\n      this.nodeGeometry = geometry;\n\n    });\n    const objLoader = new OBJLoader();\n    objLoader\n      .loadAsync(\"assets/node-spheres/sphere.obj\")\n      .then((res) => {\n        this.nodeGeometry = res.children[0].geometry;\n        this.sceneController();\n      })\n      .catch((e) => console.log(e));\n  }\n}\n","import { Component, NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { NetworkGraphRoutes } from \"../common/enums/network-graph-routes.enum\";\nimport { GroupLayoutComponent } from \"./components/group-layout/group-layout.component\";\n\nconst routes: Routes = [\n  {\n    path: `${NetworkGraphRoutes.groupLayout}`,\n    component: GroupLayoutComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NetworkGraphRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NetworkGraphRoutingModule } from './network-graph-routing.module';\nimport { GroupLayoutComponent } from './components/group-layout/group-layout.component';\n\n\n@NgModule({\n  declarations: [GroupLayoutComponent],\n  imports: [\n    CommonModule,\n    NetworkGraphRoutingModule\n  ]\n})\nexport class NetworkGraphModule { }\n"],"sourceRoot":""}