{"version":3,"sources":["./src/app/basic3d/basic3d-routing.module.ts","./src/app/basic3d/basic3d.module.ts","./src/app/basic3d/components/geometry/geometry.component.html","./src/app/basic3d/components/geometry/geometry.component.ts","./src/app/common/enums/colors.enum.ts","./src/app/three/services/three.service.ts"],"names":[],"mappings":"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","file":"basic3d-basic3d-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { Base3dRoutes } from \"../common/enums/base3d-routes.enum\";\nimport { GeometryComponent } from \"./components/geometry/geometry.component\";\n\nconst routes: Routes = [\n  { path: \"\", component: GeometryComponent },\n  { path: `${Base3dRoutes.customGeometry}`, component: GeometryComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class Basic3dRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { Basic3dRoutingModule } from './basic3d-routing.module';\nimport { GeometryComponent } from './components/geometry/geometry.component';\n\n\n@NgModule({\n  declarations: [GeometryComponent],\n  imports: [\n    CommonModule,\n    Basic3dRoutingModule\n  ]\n})\nexport class Basic3dModule { }\n","<canvas height=\"400\" width=\"800\" #canvasEl></canvas>","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild,\n} from \"@angular/core\";\nimport { ThreeService } from \"src/app/three/services/three.service\";\nimport * as THREE from \"three\";\nimport { Mesh, Vector3 } from \"three\";\n\n@Component({\n  selector: \"app-geometry\",\n  templateUrl: \"./geometry.component.html\",\n  styleUrls: [\"./geometry.component.scss\"],\n})\nexport class GeometryComponent implements OnInit, AfterViewInit {\n  @ViewChild(\"canvasEl\", { static: false, read: ElementRef })\n  canvasEl: ElementRef;\n\n  threeCommon: { scene: any; renderer: any; camera: any; controls: any };\n\n  geometry: THREE.Geometry;\n\n  constructor(private threeService: ThreeService) {}\n\n  ngOnInit() {}\n  ngAfterViewInit() {\n    this.threeCommon = this.threeService.getThreeCommon(\n      this.canvasEl.nativeElement\n    );\n    this.threeCommon.camera.position.z = 2;\n    this.viewController();\n  }\n  viewController() {\n    this.configureGeometry();\n    this.configureMesh();\n    this.renderView();\n  }\n\n  configureGeometry() {\n    this.geometry = new THREE.Geometry();\n    this.geometry.vertices.push(new THREE.Vector3(1, 0, 0));\n    this.geometry.vertices.push(new THREE.Vector3(0, 1, 0));\n    this.geometry.vertices.push(new THREE.Vector3(0, 0, 1));\n\n    this.geometry.faces.push(new THREE.Face3(0, 1, 2));\n  }\n\n  configureMesh() {\n    this.threeCommon.scene.add(\n      new Mesh(\n        this.geometry,\n        new THREE.MeshBasicMaterial({ color: \"red\", side: THREE.DoubleSide })\n      )\n    );\n  }\n\n  renderView() {\n    this.threeCommon.renderer.render(\n      this.threeCommon.scene,\n      this.threeCommon.camera\n    );\n    window.requestAnimationFrame(this.renderView.bind(this));\n  }\n}\n","export enum Colors {\n    red = '#F97664',\n    green = '#C8FF67',\n    canvasBackground = '#ECFCF9',\n    yellow = '#F9E764'\n\n}\n","import { Injectable } from \"@angular/core\";\nimport * as THREE from \"three\";\nimport { Colors } from \"src/app/common/enums/colors.enum\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ThreeService {\n  constructor() {}\n\n  getThreeCommon(\n    canvasEl,\n    directionalLight = false\n  ): { scene: any; renderer: any; camera: any; controls: any } {\n    const common = {\n      scene: new THREE.Scene(),\n      renderer: new THREE.WebGLRenderer({ canvas: canvasEl, antialias: true }),\n      camera: new THREE.PerspectiveCamera(75, 2),\n      controls: {},\n    };\n    common.renderer.setSize(canvasEl.offsetWidth, canvasEl.offsetHeight);\n    common.scene.add(\n      directionalLight\n        ? new THREE.DirectionalLight(0xffffff, 1)\n        : new THREE.AmbientLight(0xffffff, 1)\n    );\n    common.controls = this.configureViewSettings(\n      common.scene,\n      common.camera,\n      common.renderer\n    );\n    return common;\n  }\n\n  getThreeCommonWindow() {\n    const common = {\n      scene: new THREE.Scene(),\n      renderer: new THREE.WebGLRenderer(),\n      camera: new THREE.PerspectiveCamera(),\n    };\n    common.scene.background = new THREE.Color(Colors.canvasBackground);\n    common.renderer.setSize(window.innerWidth, window.innerHeight);\n    common.camera.position.z = 100;\n    return common;\n  }\n\n  configureViewSettings(scene, camera, renderer) {\n    scene.background = new THREE.Color(0xffffff);\n    const light = new THREE.AmbientLight(0x404040); // soft white light\n    scene.add(light);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    camera.position.set(0, 0, 100);\n    // controls.autoRotate =true;\n    // controls.autoRotateSpeed =1;\n    return controls;\n  }\n\n  getRendererCallCount(renderer) {\n    return renderer.info.render.calls;\n  }\n\n  cleanScene(threeCommon) {\n    var meshes = [];\n\n    threeCommon.scene.traverse(function (object) {\n      if (object.isMesh) meshes.push(object);\n    });\n    for (var i = 0; i < meshes.length; i++) {\n      var mesh = meshes[i];\n      mesh.material.dispose();\n      mesh.geometry.dispose();\n      threeCommon.scene.remove(mesh);\n    }\n  }\n}\n"],"sourceRoot":""}