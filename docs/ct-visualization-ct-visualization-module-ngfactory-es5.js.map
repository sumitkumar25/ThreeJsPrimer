{"version":3,"sources":["./node_modules/globe.gl/dist/globe.gl.module.js","./src/app/ct-visualization/components/ct-globe-gl-intfrastructure/ct-globe-gl-intfrastructure.component.html","./src/app/ct-visualization/components/ct-globe-gl-intfrastructure/ct-globe-gl-intfrastructure.component.ts","./src/app/ct-visualization/components/ct-globe-infrastructure/ct-globe-infrastructure.component.html","./src/app/ct-visualization/components/ct-globe-infrastructure/ct-globe-infrastructure.component.ts","./src/app/ct-visualization/ct-visualization-routing.module.ts","./src/app/ct-visualization/ct-visualization.module.ts","./src/app/ct-visualization/services/ct-visualization-request.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE;AAC3B;AACiB;AACjB;AACP;AACQ;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,eAAe,6BAA6B;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wCAAwC,SAAS;;AAEjD;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,8FAA8F,aAAa;AAC3G;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,kDAAY;AAC5B,oBAAoB,sDAAgB;AACpC,WAAW,6CAAO;AAClB;AACA;;AAEA,qCAAqC,mDAAU;AAC/C;AACA,2BAA2B;AAC3B,CAAC;AACD;AACA,2BAA2B;AAC3B,CAAC,IAAI;;AAEL,+CAA+C,4DAAkB;AACjE;AACA,2BAA2B;AAC3B,CAAC;AACD;AACA,2BAA2B;AAC3B,CAAC,IAAI;;AAEL;AACA,YAAY,uDAAO;AACnB;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,wCAAwC;;AAExC;AACA;AACA,OAAO;AACP;AACA,6CAA6C;;AAE7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,yDAAK,mEAAmE,yDAAK;AAC3F;;AAEA;AACA,OAAO;;;AAGP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,iGAAiG,aAAa;AAC9G;AACA;;AAEA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,wCAAwC;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,mDAAU;AAC3B;AACA,OAAO;AACP,kBAAkB,oEAAkB;AACpC;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;;AAEA;AACA,2BAA2B;;AAE3B;AACA,gDAAgD;;AAEhD;AACA;AACA,gCAAgC;;AAEhC,uFAAuF;;AAEvF;AACA;AACA,KAAK,EAAE;;AAEP;AACA,+CAA+C;;AAE/C;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gDAAgD;;AAEhD,oDAAoD;;AAEpD;AACA,KAAK,EAAE;;AAEP;AACA,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA;AACA,QAAQ;;;AAGR;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"ct-visualization-ct-visualization-module-ngfactory-es5.js","sourcesContent":["import { AmbientLight, DirectionalLight, Vector2 } from 'three';\nimport ThreeGlobe from 'three-globe';\nimport ThreeRenderObjects from 'three-render-objects';\nimport accessorFn from 'accessor-fn';\nimport Kapsule from 'kapsule';\nimport TWEEN from '@tweenjs/tween.js';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction linkKapsule (kapsulePropName, kapsuleType) {\n  var dummyK = new kapsuleType(); // To extract defaults\n\n  return {\n    linkProp: function linkProp(prop) {\n      // link property config\n      return {\n        \"default\": dummyK[prop](),\n        onChange: function onChange(v, state) {\n          state[kapsulePropName][prop](v);\n        },\n        triggerUpdate: false\n      };\n    },\n    linkMethod: function linkMethod(method) {\n      // link method pass-through\n      return function (state) {\n        var kapsuleInstance = state[kapsulePropName];\n\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        var returnVal = kapsuleInstance[method].apply(kapsuleInstance, args);\n        return returnVal === kapsuleInstance ? this // chain based on the parent object, not the inner kapsule\n        : returnVal;\n      };\n    }\n  };\n}\n\nvar three = window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  AmbientLight: AmbientLight,\n  DirectionalLight: DirectionalLight,\n  Vector2: Vector2\n};\n// Expose config from ThreeGlobe\n\nvar bindGlobe = linkKapsule('globe', ThreeGlobe);\nvar linkedGlobeProps = Object.assign.apply(Object, _toConsumableArray(['globeImageUrl', 'bumpImageUrl', 'showAtmosphere', 'showGraticules', 'pointsData', 'pointLat', 'pointLng', 'pointColor', 'pointAltitude', 'pointRadius', 'pointResolution', 'pointsMerge', 'pointsTransitionDuration', 'arcsData', 'arcStartLat', 'arcStartLng', 'arcEndLat', 'arcEndLng', 'arcColor', 'arcAltitude', 'arcAltitudeAutoScale', 'arcStroke', 'arcCurveResolution', 'arcCircularResolution', 'arcDashLength', 'arcDashGap', 'arcDashInitialGap', 'arcDashAnimateTime', 'arcsTransitionDuration', 'polygonsData', 'polygonGeoJsonGeometry', 'polygonCapColor', 'polygonSideColor', 'polygonStrokeColor', 'polygonAltitude', 'polygonCapCurvatureResolution', 'polygonsTransitionDuration', 'pathsData', 'pathPoints', 'pathPointLat', 'pathPointLng', 'pathPointAlt', 'pathResolution', 'pathColor', 'pathStroke', 'pathDashLength', 'pathDashGap', 'pathDashInitialGap', 'pathDashAnimateTime', 'pathTransitionDuration', 'hexBinPointsData', 'hexBinPointLat', 'hexBinPointLng', 'hexBinPointWeight', 'hexBinResolution', 'hexMargin', 'hexTopCurvatureResolution', 'hexTopColor', 'hexSideColor', 'hexAltitude', 'hexBinMerge', 'hexTransitionDuration', 'hexPolygonsData', 'hexPolygonGeoJsonGeometry', 'hexPolygonColor', 'hexPolygonAltitude', 'hexPolygonResolution', 'hexPolygonMargin', 'hexPolygonCurvatureResolution', 'hexPolygonsTransitionDuration', 'labelsData', 'labelLat', 'labelLng', 'labelAltitude', 'labelRotation', 'labelText', 'labelSize', 'labelTypeFace', 'labelColor', 'labelResolution', 'labelIncludeDot', 'labelDotRadius', 'labelDotOrientation', 'labelsTransitionDuration', 'customLayerData', 'customThreeObject', 'customThreeObjectUpdate'].map(function (p) {\n  return _defineProperty({}, p, bindGlobe.linkProp(p));\n})));\nvar linkedGlobeMethods = Object.assign.apply(Object, _toConsumableArray(['globeMaterial', 'getCoords', 'toGeoCoords'].map(function (p) {\n  return _defineProperty({}, p, bindGlobe.linkMethod(p));\n}))); // Expose config from renderObjs\n\nvar bindRenderObjs = linkKapsule('renderObjs', ThreeRenderObjects);\nvar linkedRenderObjsProps = Object.assign.apply(Object, _toConsumableArray(['width', 'height', 'backgroundColor', 'backgroundImageUrl', 'enablePointerInteraction'].map(function (p) {\n  return _defineProperty({}, p, bindRenderObjs.linkProp(p));\n})));\nvar linkedRenderObjsMethods = Object.assign.apply(Object, _toConsumableArray(['postProcessingComposer'].map(function (p) {\n  return _defineProperty({}, p, bindRenderObjs.linkMethod(p));\n}))); //\n\nvar GLOBE_RADIUS = 100;\nvar globe = Kapsule({\n  props: _objectSpread2(_objectSpread2({\n    onZoom: {\n      triggerUpdate: false\n    },\n    onGlobeClick: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    onGlobeRightClick: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    pointLabel: {\n      \"default\": 'name',\n      triggerUpdate: false\n    },\n    onPointClick: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    onPointRightClick: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    onPointHover: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    arcLabel: {\n      \"default\": 'name',\n      triggerUpdate: false\n    },\n    onArcClick: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    onArcRightClick: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    onArcHover: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    polygonLabel: {\n      \"default\": 'name',\n      triggerUpdate: false\n    },\n    onPolygonClick: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    onPolygonRightClick: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    onPolygonHover: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    pathLabel: {\n      \"default\": 'name',\n      triggerUpdate: false\n    },\n    onPathClick: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    onPathRightClick: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    onPathHover: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    hexLabel: {\n      triggerUpdate: false\n    },\n    onHexClick: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    onHexRightClick: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    onHexHover: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    hexPolygonLabel: {\n      triggerUpdate: false\n    },\n    onHexPolygonClick: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    onHexPolygonRightClick: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    onHexPolygonHover: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    labelLabel: {\n      triggerUpdate: false\n    },\n    onLabelClick: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    onLabelRightClick: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    onLabelHover: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    customLayerLabel: {\n      \"default\": 'name',\n      triggerUpdate: false\n    },\n    onCustomLayerClick: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    onCustomLayerRightClick: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    onCustomLayerHover: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    pointerEventsFilter: {\n      \"default\": function _default() {\n        return true;\n      },\n      triggerUpdate: false,\n      onChange: function onChange(filterFn, state) {\n        return state.renderObjs.hoverFilter(function (obj) {\n          return filterFn(obj, obj.__data);\n        });\n      }\n    }\n  }, linkedGlobeProps), linkedRenderObjsProps),\n  methods: _objectSpread2(_objectSpread2({\n    pauseAnimation: function pauseAnimation(state) {\n      if (state.animationFrameRequestId !== null) {\n        cancelAnimationFrame(state.animationFrameRequestId);\n        state.animationFrameRequestId = null;\n      }\n\n      return this;\n    },\n    resumeAnimation: function resumeAnimation(state) {\n      if (state.animationFrameRequestId === null) {\n        this._animationCycle();\n      }\n\n      return this;\n    },\n    _animationCycle: function _animationCycle(state) {\n      // Frame cycle\n      state.renderObjs.tick();\n      state.animationFrameRequestId = requestAnimationFrame(this._animationCycle);\n    },\n    pointOfView: function pointOfView(state) {\n      var geoCoords = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var transitionDuration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var curGeoCoords = getGeoCoords(); // Getter\n\n      if (geoCoords.lat === undefined && geoCoords.lng === undefined && geoCoords.altitude === undefined) {\n        return curGeoCoords;\n      } else {\n        // Setter\n        var finalGeoCoords = Object.assign({}, curGeoCoords, geoCoords);\n\n        if (!transitionDuration) {\n          // no animation\n          setCameraPos(finalGeoCoords);\n        } else {\n          // Avoid rotating more than 180deg longitude\n          while (curGeoCoords.lng - finalGeoCoords.lng > 180) {\n            curGeoCoords.lng -= 360;\n          }\n\n          while (curGeoCoords.lng - finalGeoCoords.lng < -180) {\n            curGeoCoords.lng += 360;\n          }\n\n          new TWEEN.Tween(curGeoCoords).to(finalGeoCoords, transitionDuration).easing(TWEEN.Easing.Cubic.InOut).onUpdate(setCameraPos).start();\n        }\n\n        return this;\n      } //\n\n\n      function getGeoCoords() {\n        return state.globe.toGeoCoords(state.renderObjs.cameraPosition());\n      }\n\n      function setCameraPos(_ref5) {\n        var lat = _ref5.lat,\n            lng = _ref5.lng,\n            altitude = _ref5.altitude;\n        state.renderObjs.cameraPosition(state.globe.getCoords(lat, lng, altitude));\n      }\n    },\n    getScreenCoords: function getScreenCoords(state) {\n      var _state$globe;\n\n      for (var _len = arguments.length, geoCoords = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        geoCoords[_key - 1] = arguments[_key];\n      }\n\n      var cartesianCoords = (_state$globe = state.globe).getCoords.apply(_state$globe, geoCoords);\n\n      return state.renderObjs.getScreenCoords(cartesianCoords.x, cartesianCoords.y, cartesianCoords.z);\n    },\n    toGlobeCoords: function toGlobeCoords(state, x, y) {\n      var globeIntersects = state.renderObjs.intersectingObjects(x, y).find(function (d) {\n        return d.object.__globeObjType === 'globe';\n      });\n      if (!globeIntersects) return null; // coords outside globe\n\n      var _state$globe$toGeoCoo = state.globe.toGeoCoords(globeIntersects.point),\n          lat = _state$globe$toGeoCoo.lat,\n          lng = _state$globe$toGeoCoo.lng;\n\n      return {\n        lat: lat,\n        lng: lng\n      };\n    },\n    scene: function scene(state) {\n      return state.renderObjs.scene();\n    },\n    // Expose scene\n    camera: function camera(state) {\n      return state.renderObjs.camera();\n    },\n    // Expose camera\n    renderer: function renderer(state) {\n      return state.renderObjs.renderer();\n    },\n    // Expose renderer\n    controls: function controls(state) {\n      return state.renderObjs.controls();\n    },\n    // Expose controls\n    _destructor: function _destructor() {\n      this.pauseAnimation();\n      this.pointsData([]);\n      this.arcsData([]);\n      this.polygonsData([]);\n      this.pathsData([]);\n      this.hexBinPointsData([]);\n      this.hexPolygonsData([]);\n      this.labelsData([]);\n      this.customLayerData([]);\n    }\n  }, linkedGlobeMethods), linkedRenderObjsMethods),\n  stateInit: function stateInit(_ref6) {\n    var rendererConfig = _ref6.rendererConfig,\n        _ref6$waitForGlobeRea = _ref6.waitForGlobeReady,\n        waitForGlobeReady = _ref6$waitForGlobeRea === void 0 ? true : _ref6$waitForGlobeRea,\n        globeInitConfig = _objectWithoutProperties(_ref6, [\"rendererConfig\", \"waitForGlobeReady\"]);\n\n    return {\n      globe: new ThreeGlobe(_objectSpread2({\n        waitForGlobeReady: waitForGlobeReady\n      }, globeInitConfig)),\n      renderObjs: ThreeRenderObjects({\n        controlType: 'orbit',\n        rendererConfig: rendererConfig,\n        waitForLoadComplete: waitForGlobeReady\n      }).skyRadius(GLOBE_RADIUS * 500).showNavInfo(false)\n    };\n  },\n  init: function init(domNode, state) {\n    var _this = this;\n\n    // Wipe DOM\n    domNode.innerHTML = ''; // Add relative container\n\n    domNode.appendChild(state.container = document.createElement('div'));\n    state.container.style.position = 'relative'; // Add renderObjs\n\n    var roDomNode = document.createElement('div');\n    state.container.appendChild(roDomNode);\n    state.renderObjs(roDomNode); // inject renderer size on three-globe\n\n    state.globe.rendererSize(state.renderObjs.renderer().getSize(new three.Vector2())); // set initial distance\n\n    this.pointOfView({\n      altitude: 2.5\n    }); // calibrate orbit controls\n\n    var controls = state.renderObjs.controls();\n    controls.minDistance = GLOBE_RADIUS * 1.01; // just above the surface\n\n    setTimeout(function () {\n      return controls.maxDistance = GLOBE_RADIUS * 100;\n    }); // apply async  after renderObjs sets maxDistance\n\n    controls.enablePan = false;\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.1;\n    controls.rotateSpeed = 0.3;\n    controls.zoomSpeed = 0.3;\n    controls.addEventListener('change', function () {\n      // adjust controls speed based on altitude\n      var pov = _this.pointOfView();\n\n      controls.rotateSpeed = pov.altitude * 0.2; // Math.pow(pov.altitude + 1, 2) * 0.025;\n\n      controls.zoomSpeed = (pov.altitude + 1) * 0.1; // Math.sqrt(pov.altitude) * 0.2;\n\n      state.onZoom && state.onZoom(pov);\n    }); // config renderObjs\n\n    var getGlobeObj = function getGlobeObj(object) {\n      var obj = object; // recurse up object chain until finding the globe object\n\n      while (obj && !obj.hasOwnProperty('__globeObjType')) {\n        obj = obj.parent;\n      }\n\n      return obj;\n    };\n\n    var dataAccessors = {\n      point: function point(d) {\n        return d;\n      },\n      arc: function arc(d) {\n        return d;\n      },\n      polygon: function polygon(d) {\n        return d.data;\n      },\n      path: function path(d) {\n        return d;\n      },\n      hexbin: function hexbin(d) {\n        return d;\n      },\n      hexPolygon: function hexPolygon(d) {\n        return d;\n      },\n      label: function label(d) {\n        return d;\n      },\n      custom: function custom(d) {\n        return d;\n      }\n    };\n    state.renderObjs.objects([// Populate scene\n    new three.AmbientLight(0xbbbbbb), new three.DirectionalLight(0xffffff, 0.6), state.globe]).hoverOrderComparator(function (a, b) {\n      var aObj = getGlobeObj(a);\n      var bObj = getGlobeObj(b); // de-prioritize background / non-globe objects\n\n      var isBackground = function isBackground(o) {\n        return !o;\n      }; // || o.__globeObjType === 'globe' || o.__globeObjType === 'atmosphere';\n\n\n      return isBackground(aObj) - isBackground(bObj);\n    }).lineHoverPrecision(0.2).tooltipContent(function (obj) {\n      var objAccessors = {\n        point: state.pointLabel,\n        arc: state.arcLabel,\n        polygon: state.polygonLabel,\n        path: state.pathLabel,\n        hexbin: state.hexLabel,\n        hexPolygon: state.hexPolygonLabel,\n        label: state.labelLabel,\n        custom: state.customLayerLabel\n      };\n      var globeObj = getGlobeObj(obj);\n      var objType = globeObj.__globeObjType;\n      return globeObj && objAccessors.hasOwnProperty(objType) && dataAccessors.hasOwnProperty(objType) ? accessorFn(objAccessors[objType])(dataAccessors[objType](globeObj.__data)) || '' : '';\n    }).onHover(function (obj) {\n      // Update tooltip and trigger onHover events\n      var hoverObjFns = {\n        point: state.onPointHover,\n        arc: state.onArcHover,\n        polygon: state.onPolygonHover,\n        path: state.onPathHover,\n        hexbin: state.onHexHover,\n        hexPolygon: state.onHexPolygonHover,\n        label: state.onLabelHover,\n        custom: state.onCustomLayerHover\n      };\n      var hoverObj = getGlobeObj(obj); // ignore non-recognised obj types\n\n      hoverObj && !hoverObjFns.hasOwnProperty(hoverObj.__globeObjType) && (hoverObj = null);\n\n      if (hoverObj !== state.hoverObj) {\n        var prevObjType = state.hoverObj ? state.hoverObj.__globeObjType : null;\n        var prevObjData = state.hoverObj ? dataAccessors[prevObjType](state.hoverObj.__data) : null;\n        var objType = hoverObj ? hoverObj.__globeObjType : null;\n        var objData = hoverObj ? dataAccessors[objType](hoverObj.__data) : null;\n\n        if (prevObjType && prevObjType !== objType) {\n          // Hover out\n          hoverObjFns[prevObjType](null, prevObjData);\n        }\n\n        if (objType) {\n          // Hover in\n          hoverObjFns[objType](objData, prevObjType === objType ? prevObjData : null);\n        }\n\n        state.hoverObj = hoverObj;\n      }\n    }).onClick(function (obj, ev, point) {\n      if (!obj) return; // ignore background clicks\n      // Handle click events on objects\n\n      var objFns = {\n        globe: state.onGlobeClick,\n        point: state.onPointClick,\n        arc: state.onArcClick,\n        polygon: state.onPolygonClick,\n        path: state.onPathClick,\n        hexbin: state.onHexClick,\n        hexPolygon: state.onHexPolygonClick,\n        label: state.onLabelClick,\n        custom: state.onCustomLayerClick\n      };\n      var globeObj = getGlobeObj(obj);\n      var objType = globeObj.__globeObjType;\n\n      if (globeObj && objFns.hasOwnProperty(objType)) {\n        var args = [ev];\n\n        if (objType === 'globe') {\n          // include click coords in { lat, lng }\n          var _this$toGeoCoords = _this.toGeoCoords(point),\n              lat = _this$toGeoCoords.lat,\n              lng = _this$toGeoCoords.lng;\n\n          args.unshift({\n            lat: lat,\n            lng: lng\n          });\n        }\n\n        dataAccessors.hasOwnProperty(objType) && args.unshift(dataAccessors[objType](globeObj.__data));\n        objFns[objType].apply(objFns, args);\n      }\n    }).onRightClick(function (obj, ev, point) {\n      if (!obj) return; // ignore background clicks\n      // Handle right-click events\n\n      var objFns = {\n        globe: state.onGlobeRightClick,\n        point: state.onPointRightClick,\n        arc: state.onArcRightClick,\n        polygon: state.onPolygonRightClick,\n        path: state.onPathRightClick,\n        hexbin: state.onHexRightClick,\n        hexPolygon: state.onHexPolygonRightClick,\n        label: state.onLabelRightClick,\n        custom: state.onCustomLayerRightClick\n      };\n      var globeObj = getGlobeObj(obj);\n      var objType = globeObj.__globeObjType;\n\n      if (globeObj && objFns.hasOwnProperty(objType)) {\n        var args = [ev];\n\n        if (objType === 'globe') {\n          // include click coords in { lat, lng }\n          var _this$toGeoCoords2 = _this.toGeoCoords(point),\n              lat = _this$toGeoCoords2.lat,\n              lng = _this$toGeoCoords2.lng;\n\n          args.unshift({\n            lat: lat,\n            lng: lng\n          });\n        }\n\n        dataAccessors.hasOwnProperty(objType) && args.unshift(dataAccessors[objType](globeObj.__data));\n        objFns[objType].apply(objFns, args);\n      }\n    }); //\n    // Kick-off renderer\n\n    this._animationCycle();\n  }\n});\n\nexport default globe;\n","<h3>Coordinate Points: lib events, Globe.gl package (console listed)</h3>\n<div class=\"\">\n    <!-- <button (click)=\"scrollToTop($event)\" mat-button class=\"top-btn\" color=\"accent\">Go to top</button> -->\n    <div #el class=\"\"></div>\n</div>","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  AfterViewInit,\n  OnDestroy,\n} from \"@angular/core\";\nimport Globe from \"globe.gl\";\nimport { CtVisualizationRequestService } from \"../../services/ct-visualization-request.service\";\nimport { GeoJson, GeoJsonResponse } from \"../../interfaces/geo-json\";\nimport { GlobeData } from \"../../interfaces/globe-data\";\nimport { ThreeService } from \"src/app/three/services/three.service\";\n@Component({\n  selector: \"app-ct-globe-gl-intfrastructure\",\n  templateUrl: \"./ct-globe-gl-intfrastructure.component.html\",\n  styleUrls: [\"./ct-globe-gl-intfrastructure.component.scss\"],\n})\nexport class CtGlobeGlIntfrastructureComponent\n  implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(\"el\", { static: false }) el: ElementRef;\n\n  filteredGlobeData: Array<GlobeData>;\n  subscription: any;\n\n  constructor(\n    private ctVisualization: CtVisualizationRequestService,\n    private threeService: ThreeService\n  ) {}\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n  ngOnInit() {}\n  getStateCapitalsData() {\n    this.subscription = this.ctVisualization\n      .getStateCapitals()\n      .subscribe((response: GeoJsonResponse) => {\n        if (response.features && response.features.length) {\n          this.formatGeoJsonResponse(response.features);\n          this.constructGlobe();\n        }\n      });\n  }\n  ngAfterViewInit(): void {\n    this.getStateCapitalsData();\n  }\n\n  private formatGeoJsonResponse(usaCapitalsGeoData) {\n    this.filteredGlobeData = usaCapitalsGeoData\n      .filter((location: GeoJson) => {\n        return (\n          location.geometry &&\n          location.geometry.coordinates &&\n          location.geometry.coordinates.length === 2\n        );\n      })\n      .map((location: GeoJson) => {\n        return {\n          lat: location.geometry.coordinates[1],\n          lng: location.geometry.coordinates[0],\n          label:\n            location.properties && location.properties.name\n              ? location.properties.name\n              : \"\",\n        };\n      });\n  }\n\n  constructGlobe() {\n    const globe = Globe();\n    globe(this.el.nativeElement)\n      .globeImageUrl(\"assets/earth-dark.jpg\")\n      .pointsData(this.filteredGlobeData)\n      .pointAltitude(0.0005)\n      .pointColor((e) => {\n        return \"#007FFF\";\n      })\n      .pointRadius(0.2)\n      .pointResolution(2000)\n      .onPointClick(function (point, event) {\n        console.log(\"click\", point, event, this);\n      })\n      .onPointHover(function (point, prevPoint) {\n        console.log(\"hover\", point, prevPoint, this);\n      });\n  }\n\n  scrollToTop($event) {\n    window.scroll({\n      top: 0,\n      left: 0,\n      behavior: \"smooth\",\n    });\n  }\n}\n","<h3>Coordinate Points: Raycaster events (console listed)</h3>\n<div #canvasEl></div>\n<!-- <canvas height=\"500\" width=\"1000\"  class=\"visualization--canvas\" #canvasEl></canvas> -->","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { ThreeService } from \"src/app/three/services/three.service\";\n// import Globe from 'globe.gl';\nimport * as THREE from \"three\";\nimport ThreeGlobe from \"three-globe\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { GeoJson, GeoJsonResponse } from \"../../interfaces/geo-json\";\nimport { GlobeData } from \"../../interfaces/globe-data\";\nimport { ThreeConstants } from \"../../interfaces/three-constants\";\nimport { CtVisualizationRequestService } from \"../../services/ct-visualization-request.service\";\n\n@Component({\n  selector: \"app-ct-globe-infrastructure\",\n  templateUrl: \"./ct-globe-infrastructure.component.html\",\n  styleUrls: [\"./ct-globe-infrastructure.component.scss\"],\n})\nexport class CtGlobeInfrastructureComponent\n  implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(\"canvasEl\", { read: ElementRef, static: false })\n  canvasEl: ElementRef;\n  private threeConstants: ThreeConstants;\n\n  private assetsGeoData: Array<GeoJson>;\n\n  private filteredGlobeData: Array<GlobeData>;\n\n  subscriptions: Array<Subscription> = [];\n  tbControls: any;\n\n  obControls: any;\n  raycaster = new THREE.Raycaster();\n  mouse = new THREE.Vector2();\n\n  enableRaycast: boolean;\n\n  constructor(\n    private ctVisualization: ThreeService,\n    private ctVisualizationRequest: CtVisualizationRequestService\n  ) {}\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {\n    this.threeConstants = this.ctVisualization.getThreeCommonWindow();\n    this.getAssetGeoData();\n  }\n\n  getAssetGeoData() {\n    this.subscriptions.push(\n      this.ctVisualizationRequest\n        .getAssetsGeoData()\n        .subscribe((response: GeoJsonResponse) => {\n          if (response.features && response.features.length) {\n            this.assetsGeoData = response.features;\n            this.constructInfraGlobe();\n          }\n        })\n    );\n  }\n\n  constructInfraGlobe() {\n    this.formatGeoJsonResponse();\n    const globe = new ThreeGlobe()\n      .globeImageUrl(\"assets/earth-dark.jpg\")\n      .pointsData(this.filteredGlobeData)\n      .pointAltitude(0.0005)\n      .pointColor(() => \"#007FFF\")\n      .pointRadius(0.2)\n      .pointResolution(2000);\n\n    this.threeConstants.scene.add(globe);\n    this.configureSceneParameters();\n    this.renderScene();\n  }\n  onPointClick(point) {\n    console.log(\"point click\");\n  }\n\n  private formatGeoJsonResponse() {\n    this.filteredGlobeData = this.assetsGeoData\n      .filter((location: GeoJson) => {\n        return (\n          location.geometry &&\n          location.geometry.coordinates &&\n          location.geometry.coordinates.length === 2\n        );\n      })\n      .map((location: GeoJson) => {\n        return {\n          lat: location.geometry.coordinates[1],\n          lng: location.geometry.coordinates[0],\n          label:\n            location.properties && location.properties[\"city\"]\n              ? location.properties[\"city\"]\n              : \"\",\n        };\n      });\n  }\n\n  configureSceneParameters() {\n    this.threeConstants.scene.add(new THREE.AmbientLight(0xbbbbbb));\n    this.threeConstants.scene.add(new THREE.DirectionalLight(0xffffff, 0.6));\n\n    this.threeConstants.renderer.setSize(1000, 500);\n    this.canvasEl.nativeElement.appendChild(\n      this.threeConstants.renderer.domElement\n    );\n\n    // (this.threeConstants.camera as THREE.PerspectiveCamera).aspect = this.canvasEl.nativeElement.offsetWidth / this.canvasEl.nativeElement.offsetHeight;\n    (this.threeConstants.camera as THREE.PerspectiveCamera).aspect = 1000 / 500;\n    (this.threeConstants\n      .camera as THREE.PerspectiveCamera).updateProjectionMatrix();\n    this.threeConstants.camera.position.z = 500;\n\n    // controls.\n    // this.tbControls = new TrackballControls(this.threeConstants.camera, this.threeConstants.renderer.domElement);\n    // this.tbControls.minDistance = 101;\n    // this.tbControls.rotateSpeed = 5;\n    // this.tbControls.zoomSpeed = 0.8;\n\n    this.obControls = new OrbitControls(\n      this.threeConstants.camera,\n      this.threeConstants.renderer.domElement\n    );\n    this.obControls.minDistance = 101;\n    this.obControls.rotateSpeed = 5;\n    this.obControls.zoomSpeed = 0.8;\n\n    // this.threeConstants.renderer.domElement.addEventListener('click', this.mouseMoveHandler.bind(this), false)\n  }\n\n  mouseMoveHandler(event) {\n    this.mouse.x = (event.clientX / 1000) * 2 - 1;\n    this.mouse.y = -(event.clientY / 500) * 2 + 1;\n    this.enableRaycast = true;\n  }\n\n  private raycastVisualization() {\n    if (this.enableRaycast) {\n      this.enableRaycast = false;\n      this.raycaster.setFromCamera(this.mouse, this.threeConstants.camera);\n      const intersects = this.raycaster.intersectObjects(\n        this.threeConstants.scene.children,\n        true\n      );\n\n      for (var i = 0; i < intersects.length; i++) {\n        const changeProp =\n          intersects[i].object &&\n          intersects[i].object[\"material\"] &&\n          intersects[i].object[\"material\"].color &&\n          intersects[i].object[\"material\"].color.set;\n        if (changeProp) {\n          console.log(changeProp, intersects[i]);\n          intersects[i].object[\"material\"].color.set(\"red\");\n        } else {\n          console.log(changeProp, intersects[i]);\n        }\n      }\n    }\n  }\n\n  renderScene() {\n    this.obControls.update();\n    this.raycastVisualization();\n    this.threeConstants.renderer.render(\n      this.threeConstants.scene,\n      this.threeConstants.camera\n    );\n    window.requestAnimationFrame(this.renderScene.bind(this));\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n    this.ctVisualization.cleanScene(this.threeConstants);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { GlobeModuleRoutes } from \"../common/enums/globe-module-routes.enum\";\nimport { CtGlobeGlIntfrastructureComponent } from \"./components/ct-globe-gl-intfrastructure/ct-globe-gl-intfrastructure.component\";\nimport { CtGlobeInfrastructureComponent } from \"./components/ct-globe-infrastructure/ct-globe-infrastructure.component\";\n\nconst routes: Routes = [\n  {\n    path: `${GlobeModuleRoutes.globeGlPackage}`,\n    component: CtGlobeGlIntfrastructureComponent,\n  },\n  {\n    path: `${GlobeModuleRoutes.globeRaycaster}`,\n    component: CtGlobeInfrastructureComponent,\n  },\n  {\n    path: \"\",\n    component: CtGlobeGlIntfrastructureComponent,\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CtVisualizationRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { CtVisualizationRoutingModule } from \"./ct-visualization-routing.module\";\nimport { CtGlobeInfrastructureComponent } from \"./components/ct-globe-infrastructure/ct-globe-infrastructure.component\";\nimport { CtVisualizationRequestService } from \"./services/ct-visualization-request.service\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { CtGlobeGlIntfrastructureComponent } from \"./components/ct-globe-gl-intfrastructure/ct-globe-gl-intfrastructure.component\";\nimport { MatButtonModule } from \"@angular/material/button\";\n\n@NgModule({\n  \n  declarations: [\n    CtGlobeInfrastructureComponent,\n    CtGlobeGlIntfrastructureComponent,\n  ],\n  imports: [\n    CommonModule,\n    CtVisualizationRoutingModule,\n    HttpClientModule,\n    MatButtonModule,\n  ],\n  providers: [CtVisualizationRequestService],\n})\nexport class CtVisualizationModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CtVisualizationRequestService {\n  STATE_CAPITALS_PATH: string ='assets/usa-capitals.geojson.json';\n  private ASSET_GEO_JSON_PATH = 'assets/capitals.geojson.json';\n  constructor(private httpClient: HttpClient) { }\n\n  getAssetsGeoData() {\n    return this.httpClient.get(this.ASSET_GEO_JSON_PATH);\n  }\n  getStateCapitals() {\n    return this.httpClient.get(this.STATE_CAPITALS_PATH);\n  }\n}\n"],"sourceRoot":""}