{"version":3,"sources":["./src/app/d3/components/canvas-connected-nodes/canvas-connected-nodes.component.html","./src/app/d3/components/canvas-connected-nodes/canvas-connected-nodes.component.ts","./src/app/d3/d3-routing/d3-routing.module.ts","./src/app/d3/d3.module.ts"],"names":[],"mappings":"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","file":"d3-d3-module-ngfactory-es5.js","sourcesContent":["<section>\n    <h3>Canvas Nodes and Connections and click event\n        <button (click)=\"resetEventHandler()\">Reset</button>\n    </h3>\n    <canvas height=\"500\" width=\"1000\"  class=\"visualization--canvas\" #canvasEl (click)=\"clickEventHandler($event)\"></canvas>\n\n    <!-- (mousemove)=\"hoverEventHandler($event)\" (mouseleave)=\"blurEventHandler($event)\" -->\n\n</section>","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'app-canvas-connected-nodes',\n  templateUrl: './canvas-connected-nodes.component.html',\n  styleUrls: ['./canvas-connected-nodes.component.scss']\n})\nexport class CanvasConnectedNodesComponent implements OnInit, AfterViewInit {\n  @ViewChild('canvasEl', { static: false }) canvasEl: ElementRef;\n  ctx;\n  connections: Path2D[];\n  constructor() { }\n  nodes = [];\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    this.ctx = this.canvasEl.nativeElement.getContext('2d');\n    this.drawShapes();\n  }\n  drawShapes() {\n    this.drawNodes();\n    this.drawConnections();\n  }\n  drawNodes() {\n    const circle = new Path2D();\n    circle.arc(100, 100, 50, 0, 2 * Math.PI);\n    this.ctx.fillStyle = 'green';\n    this.ctx.fill(circle);\n\n    const circle2 = new Path2D();\n    circle2.arc(400, 100, 50, 0, 2 * Math.PI);\n    this.ctx.fillStyle = 'blue';\n    this.ctx.fill(circle2);\n    this.nodes = [circle, circle2];\n\n  }\n  drawConnections() {\n    const line = new Path2D();\n    line.moveTo(160, 100);\n    line.lineTo(340, 100)\n    this.ctx.strokeStyle = 'red';\n    this.ctx.stroke(line);\n    this.connections = [line]\n  }\n\n  clickEventHandler($event) {\n    this.connections.forEach(connection => {\n      if(this.ctx.isPointInStroke(connection, $event.offsetX, $event.offsetY)){\n        this.ctx.strokeStyle = 'black';\n        this.ctx.stroke(connection);\n      }\n    })\n    this.nodes.forEach(n => {\n      if(this.ctx.isPointInPath(n, $event.offsetX, $event.offsetY)){\n        this.ctx.fillStyle = 'black';\n        this.ctx.fill(n);\n      }\n    })\n  }\n\n  resetEventHandler(){\n    this.drawShapes();\n  }\n\n\n\n\n\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { CanvasConnectedNodesComponent } from \"../components/canvas-connected-nodes/canvas-connected-nodes.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: CanvasConnectedNodesComponent,\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class D3RoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { D3RoutingModule } from \"./d3-routing/d3-routing.module\";\nimport { CanvasConnectedNodesComponent } from \"./components/canvas-connected-nodes/canvas-connected-nodes.component\";\nimport { MatButtonModule } from \"@angular/material/button\";\n\n@NgModule({\n  declarations: [CanvasConnectedNodesComponent],\n  imports: [CommonModule, D3RoutingModule],\n})\nexport class D3Module {}\n"],"sourceRoot":""}